git-remote-helpers(1)
=====================

NAME
----
git-remote-helpers - Helper programs for interoperation with remote git

SYNOPSIS
--------
'git remote-<transport>' <remote>

DESCRIPTION
-----------

These programs are normally not used directly by end users, but are
invoked by various git programs that interact with remote repositories
when the repository they would operate on will be accessed using
transport code not linked into the main git binary. Various particular
helper programs will behave as documented here.

COMMANDS
--------

Commands are given by the caller on the helper's standard input, one per line.

'capabilities'::
	Lists the capabilities of the helper, one per line, ending
	with a blank line.

'list'::
	Lists the refs, one per line, in the format "<value> <name>
	[<attr> ...]". The value may be a hex sha1 hash, "@<dest>" for
	a symref, or "?" to indicate that the helper could not get the
	value of the ref. A space-separated list of attributes follows
	the name; unrecognized attributes are ignored. After the
	complete list, outputs a blank line.

'option' <name> <value>::
	Set the transport helper option <name> to <value>.  Outputs a
	single line containing one of 'ok' (option successfully set),
	'unsupported' (option not recognized) or 'error <msg>'
	(option <name> is supported but <value> is not correct
	for it).  Options should be set before other commands,
	and may how those commands behave.
+
Supported if the helper has the "option" capability.

'fetch' <sha1> <name>::
	Fetches the given object, writing the necessary objects
	to the database.  Fetch commands are sent in a batch, one
	per line, and the batch is terminated with a blank line.
	Outputs a single blank line when all fetch commands in the
	same batch are complete. Only objects which were reported
	in the ref list with a sha1 may be fetched this way.
+
Optionally may output a 'lock <file>' line indicating a file under
GIT_DIR/objects/pack which is keeping a pack until refs can be
suitably updated.
+
Supported if the helper has the "fetch" capability.

If a fatal error occurs, the program writes the error message to
stderr and exits. The caller should expect that a suitable error
message has been printed if the child closes the connection without
completing a valid response for the current command.

Additional commands may be supported, as may be determined from
capabilities reported by the helper.

CAPABILITIES
------------

'fetch'::
	This helper supports the 'fetch' command.

'option'::
	This helper supports the option command.

REF LIST ATTRIBUTES
-------------------

None are defined yet, but the caller must accept any which are supplied.

OPTIONS
-------
'option verbosity' <N>::
	Change the level of messages displayed by the helper.
	When N is 0 the end-user has asked the process to be
	quiet, and the helper should produce only error output.
	N of 1 is the default level of verbosity, higher values
	of N correspond to the number of -v flags passed on the
	command line.

'option progress' \{'true'|'false'\}::
	Enable (or disable) progress messages displayed by the
	transport helper during a command.

'option depth' <depth>::
	Deepen the history of a shallow repository.

'option followtags' \{'true'|'false'\}::
	If enabled the helper should automatically fetch annotated
	tag objects if the object the tag points at was transferred
	during the fetch command.  If the tag is not fetched by
	the helper a second fetch command will usually be sent to
	ask for the tag specifically.  Some helpers may be able to
	use this option to avoid a second network connection.

Documentation
-------------
Documentation by Daniel Barkalow.

GIT
---
Part of the linkgit:git[1] suite
