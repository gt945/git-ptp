git-notes(1)
============

NAME
----
git-notes - Add/inspect object notes

SYNOPSIS
--------
[verse]
'git notes' (edit [-F <file> | -m <msg>] | show | remove | prune) [object]

DESCRIPTION
-----------
This command allows you to add/remove notes to/from objects, without
changing the objects themselves.

A typical use of notes is to extend a commit message without having
to change the commit itself. Such commit notes can be shown by `git log`
along with the original commit message. To discern these notes from the
message stored in the commit object, the notes are indented like the
message, after an unindented line saying "Notes:".

To disable notes, you have to set the config variable core.notesRef to
the empty string.  Alternatively, you can set it to a different ref,
something like "refs/notes/bugzilla".  This setting can be overridden
by the environment variable "GIT_NOTES_REF".


SUBCOMMANDS
-----------

edit::
	Edit the notes for a given object (defaults to HEAD).

show::
	Show the notes for a given object (defaults to HEAD).

remove::
	Remove the notes for a given object (defaults to HEAD).
	This is equivalent to specifying an empty note message to
	the `edit` subcommand.

prune::
	Remove all notes for non-existing/unreachable objects.

OPTIONS
-------
-m <msg>::
	Use the given note message (instead of prompting).
	If multiple `-m` options are given, their values
	are concatenated as separate paragraphs.

-F <file>::
	Take the note message from the given file.  Use '-' to
	read the note message from the standard input.


Author
------
Written by Johannes Schindelin <johannes.schindelin@gmx.de> and
Johan Herland <johan@herland.net>

Documentation
-------------
Documentation by Johannes Schindelin and Johan Herland

GIT
---
Part of the linkgit:git[7] suite
